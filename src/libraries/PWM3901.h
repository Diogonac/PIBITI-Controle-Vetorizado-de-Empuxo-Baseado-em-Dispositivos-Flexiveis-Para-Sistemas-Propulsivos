#ifndef PWM3901_h
#define PWM3901_h

#include "mbed.h"

// Device identity register address
#define PMW3901_ID    0x00
// Motion register address
#define PMW3901_MOTION    0x02
// Optical flow data register addresses
#define PMW3901_DELTA_X_L 0x03
#define PMW3901_DELTA_X_H 0x04
#define PMW3901_DELTA_Y_L 0x05
#define PMW3901_DELTA_Y_H 0x06

// Default configuration register addresses and data
const uint8_t PMW3901_DEFAULT_CONFIG_REG[] = {0x3A, 0x02, 0x03, 0x04, 0x05, 0x06, 0x7F, 0x61, 0x7F, 0x40, 0x7F, 0x41, 0x43, 0x45, 0x5B, 0x5F, 0x7B, 0x7F, 0x44, 0x40, 0x4E, 0x7F, 0x65, 0x6A, 0x7F, 0x4F, 0x5F, 0x48, 0x49, 0x57, 0x60, 0x61, 0x62, 0x63, 0x7F, 0x45, 0x7F, 0x4D, 0x55, 0x74, 0x75, 0x4A, 0x4B, 0x44, 0x45, 0x64, 0x65, 0x7F, 0x65, 0x66, 0x63, 0x7F, 0x48, 0x7F, 0x41, 0x43, 0x4B, 0x45, 0x44, 0x4C, 0x7F, 0x5B, 0x7F, 0x40, 0x70, 0x32, 0x7F, 0x40, 0x7F, 0x62, 0x63, 0x7F, 0x48, 0x6F, 0x7F, 0x5B, 0x4E, 0x5A, 0x40};
const uint8_t PMW3901_DEFAULT_CONFIG_DATA[] = {0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAD, 0x03, 0x00, 0x05, 0xB3, 0xF1, 0x14, 0x32, 0x34, 0x08, 0x06, 0x1B, 0xBF, 0x3F, 0x08, 0x20, 0x18, 0x09, 0xAF, 0x40, 0x80, 0x80, 0x77, 0x78, 0x78, 0x08, 0x50, 0x0A, 0x60, 0x00, 0x11, 0x80, 0x1F, 0x1F, 0x78, 0x78, 0x08, 0x50, 0xFF, 0x1F, 0x14, 0x60, 0x08, 0x78, 0x15, 0x58, 0x07, 0x0D, 0x14, 0x0E, 0x0F, 0x42, 0x80, 0x10, 0x02, 0x07, 0x41, 0x00, 0x44, 0x07, 0x40, 0x06, 0xf0, 0x00, 0x0D, 0xC0, 0xd5, 0x00, 0xa0, 0xA8, 0x50, 0x80};
 
// PMW3901 (optical flow sensor) class
class PMW3901
{
    public:
        // Class constructor
        PMW3901(PinName mosi, PinName miso, PinName sclk, PinName csel); 
        // Initialize sensor
        bool init();
        // Read optical flow data
        void read();
        // Optical flow data in x and y axis [pixels]
        float px, py;
    private:
        // SPI bus
        SPI spi;
        // Chip select
        DigitalOut cs;
        // Read data from register
        uint8_t read_reg(uint8_t reg);      
        // Write data into register
        void write_reg(uint8_t reg, uint8_t data);
};

#endif